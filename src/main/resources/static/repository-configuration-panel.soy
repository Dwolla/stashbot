{namespace plugin.page.stashbot}

/**
 * @param repository
 * @param ciEnabled
 * @param publishBranchRegex
 * @param publishBuildCommand
 * @param verifyBranchRegex
 * @param verifyBuildCommand
 * @param prebuildCommand
 * @param jenkinsServerName
 * @param jenkinsServersData
 **/
{template .repositoryConfigurationPanel}
<html>
<head>
    <meta name="decorator" content="stash.repository.settings">
    <meta name="projectKey" content="{$repository.project.key}">
    <meta name="repositorySlug" content="{$repository.slug}">
    <meta name="activeTab" content="repository-settings-git-ops-panel">
    <title>{{stash_i18n('stash.web.repository.git-ops.title', 'Stashbot settings for {0} / {1}', $repository.project.name, $repository.name)}}</title>
</head>
<body>
{call aui.group.group}
    {param content}
        {call aui.group.item}
            {param content}
                <h2>{stash_i18n('stash.web.repository.stashbot.heading', 'Stashbot Settings')}</h2>
            {/param}
        {/call}
    {/param}
{/call}
{call aui.group.group}
    {param content}
      {call aui.form.form}
        {param action: '' /}
        {param content}
          {call aui.form.checkboxField}
            {param legendContent: stash_i18n('stash.web.stash.enable-ci-radio.button.description', 'Enables CI Builds') /}
            {param fields: [[
              'id': 'ciEnabled',
              'labelText': stash_i18n('stash.web.stash.enable-ci-radio.button.label', 'Enabled'),
              'isChecked': $ciEnabled
              ]] /}
          {/call}
          {call aui.form.selectField}
            {param id: 'jenkinsServerName' /}
            {param labelContent: stash_i18n('stash.web.stash.jenkinsServerName.label', 'Jenkins Server') /}
            {param options: $jenkinsServersData /}
            {param value: $jenkinsServerName /}
            {param descriptionText: stash_i18n('stash.web.stash.jenkinsServerName.description', 'Jenkins Server') /}
          {/call}
          {call aui.form.textField}
            {param id: 'prebuildCommand' /}
            {param labelContent: stash_i18n('stash.web.stash.prebuildCommand.label', 'Command to run before the build') /}
            {param value: $prebuildCommand /}
            {param descriptionText: stash_i18n('stash.web.stash.prebuildCommand.description', 'Command to run before the build') /}
          {/call}
          {call aui.form.textField}
            {param id: 'publishBranchRegex' /}
            {param labelContent: stash_i18n('stash.web.stash.publishBranchRegex.label', 'Regex for branches to publish') /}
            {param value: $publishBranchRegex /}
            {param descriptionText: stash_i18n('stash.web.stash.publishBranchRegex.description', '(Regular Expression) Branches matching this regular expression will have the publish build command run on them by jenkins') /}
          {/call}
          {call aui.form.textField}
            {param id: 'publishBuildCommand' /}
            {param labelContent: stash_i18n('stash.web.stash.publishBuildCommand.label', 'Command to run for a publish build') /}
            {param value: $publishBuildCommand /}
            {param descriptionText: stash_i18n('stash.web.stash.publishBuildCommand.description', 'Command to run for a publish build') /}
          {/call}
          {call aui.form.textField}
            {param id: 'verifyBranchRegex' /}
            {param labelContent: stash_i18n('stash.web.stash.verifyBranchRegex.label', 'Regex for branches to verify') /}
            {param value: $verifyBranchRegex /}
            {param descriptionText: stash_i18n('stash.web.stash.verifyBranchRegex.description', '(Regular Expression) Branches matching this regular expression will have the verify build command run on them by jenkins') /}
          {/call}
          {call aui.form.textField}
            {param id: 'verifyBuildCommand' /}
            {param labelContent: stash_i18n('stash.web.stash.verifyBuildCommand.label', 'Command to run for a verify build') /}
            {param value: $verifyBuildCommand /}
            {param descriptionText: stash_i18n('stash.web.stash.verifyBuildCommand.description', 'Command to run for a verify build') /}
          {/call}
          {call aui.form.buttons}
            {param content}
	          {call aui.form.submit}
	            {param id: 'submit' /}
	            {param text: stash_i18n('stash.web.stash.ci-prefs.submit', 'Save') /}
	            {param type: 'submit' /}
	          {/call}
	        {/param}
          {/call}
        {/param}
      {/call}
    {/param}
{/call}
</body>
</html>
{/template}

